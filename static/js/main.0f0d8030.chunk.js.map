{"version":3,"sources":["component/Profile/UserStats.module.css","component/Profile/UserDescription.module.css","component/Profile/Profile.module.css","component/Profile/UserStats.js","component/Profile/UserDescription.js","component/Profile/Profile.js","component/StatSection/Stats.js","component/FriendsList/FriendList.js","component/Transactions/TransactionHistory.js","component/StatSection/statsData.js","App.js"],"names":["module","exports","UserStats","followersQuantity","viewsQuantity","likesQuantity","styledStats","styles","stats","styledItem","item","className","UserDescription","image","alt","name","tag","location","nameStyle","styledAvatar","avatar","src","defaultProps","Profile","user","styledProfile","profile","followers","views","likes","Stats","title","map","key","id","label","percentage","FriendList","prop","styledPerson","online","offline","list","friends","friend","isOnline","TransactionHistory","tableBody","items","type","amount","currency","App","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f0d8030.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"UserStats_stats__1b6LJ\",\"item\":\"UserStats_item__3Urdd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"UserDescription_name__3VnHj\",\"avatar\":\"UserDescription_avatar__17Oew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ACCL\"};","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './UserStats.module.css';\r\n\r\nfunction UserStats({ followersQuantity, viewsQuantity, likesQuantity }) {\r\n  const styledStats = [styles.stats];\r\n  const styledItem = [styles.item];\r\n  return (\r\n    <ul className={styledStats}>\r\n      <li className={styledItem}>\r\n        <span className=\"label\">Followers</span>\r\n        <span className=\"quantity\">{followersQuantity}</span>\r\n      </li>\r\n      <li className={styledItem}>\r\n        <span className=\"label\">Views</span>\r\n        <span className=\"quantity\">{viewsQuantity}</span>\r\n      </li>\r\n      <li className={styledItem}>\r\n        <span className=\"label\">Likes</span>\r\n        <span className=\"quantity\">{likesQuantity}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nUserStats.propTypes = {\r\n  followersQuantity: T.number.isRequired,\r\n  viewsQuantity: T.number.isRequired,\r\n  likesQuantity: T.number.isRequired,\r\n};\r\n\r\nexport default UserStats;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport styles from './UserDescription.module.css';\r\n\r\nfunction UserDescription({ image, alt, name, tag, location }) {\r\n  const nameStyle = [styles.name];\r\n  const styledAvatar = [styles.avatar];\r\n  return (\r\n    <div className=\"description\">\r\n      <img src={image} alt={alt} className={styledAvatar} />\r\n      <p className={nameStyle}>{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserDescription.defaultProps = {\r\n  alt: 'user avatar',\r\n};\r\n\r\nUserDescription.propTypes = {\r\n  image: T.string.isRequired,\r\n  name: T.string.isRequired,\r\n  location: T.string.isRequired,\r\n  tag: T.string.isRequired,\r\n  alt: T.string,\r\n};\r\n\r\nexport default UserDescription;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport UserStats from './UserStats';\r\nimport UserDescription from './UserDescription';\r\nimport styles from './Profile.module.css';\r\n\r\nfunction Profile({ user }) {\r\n  const { stats } = user;\r\n  const styledProfile = [styles.profile];\r\n  return (\r\n    <div className={styledProfile}>\r\n      <UserDescription\r\n        image={user.avatar}\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n      />\r\n      <UserStats\r\n        followersQuantity={stats.followers}\r\n        viewsQuantity={stats.views}\r\n        likesQuantity={stats.likes}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  user: T.shape({\r\n    name: T.string.isRequired,\r\n    avatar: T.string.isRequired,\r\n    tag: T.string.isRequired,\r\n    location: T.string.isRequired,\r\n    stats: T.shape({\r\n      followers: T.number.isRequired,\r\n      views: T.number.isRequired,\r\n      likes: T.number.isRequired,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nProfile.propTypes = {};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport './Stats.css';\r\nimport T from 'prop-types';\r\n\r\nfunction Stats({ title, stats }) {\r\n  const styledSection = ['stats-section'];\r\n  const styledList = ['stat-list'];\r\n  const styledItem = ['item'];\r\n  return (\r\n    <section className={styledSection}>\r\n      <h2 className=\"title\">{title}</h2>\r\n      <ul className={styledList}>\r\n        {stats.map(item => (\r\n          <li key={item.id} className={styledItem}>\r\n            <span className=\"label\">{item.label}</span>\r\n            <span className=\"percentage\">{item.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStats.propTypes = {\r\n  title: T.string.isRequired,\r\n  stats: T.arrayOf(\r\n    T.shape({\r\n      label: T.string,\r\n      percentage: T.number,\r\n      id: T.number,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport './FriendList.css';\r\n\r\nfunction FriendList(prop) {\r\n  const styledList = ['friend-list'];\r\n  const styledPerson = ['person'];\r\n  const online = ['online'];\r\n  const offline = ['offline'];\r\n  const avatar = ['avatar'];\r\n  const { friends } = prop;\r\n  const list = friends.map(friend => (\r\n    <li key={friend.id} className={styledPerson}>\r\n      <span className={friend.isOnline ? online : offline} />\r\n      <img className={avatar} src={friend.avatar} alt=\"\" />\r\n      <p className=\"name\">{friend.name}</p>\r\n    </li>\r\n  ));\r\n  return <ul className={styledList}>{list}</ul>;\r\n}\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport T from 'prop-types';\r\nimport './TransactionHistory.css';\r\n\r\nfunction TransactionHistory({ items }) {\r\n  const styledHistory = ['transaction-history'];\r\n  const tableBody = items.map(item => (\r\n    <tr key={item.id}>\r\n      <td>{item.type}</td>\r\n      <td>{item.amount}</td>\r\n      <td>{item.currency}</td>\r\n    </tr>\r\n  ));\r\n  return (\r\n    <table className={styledHistory}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{tableBody}</tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: T.arrayOf(\r\n    T.shape({\r\n      type: T.string,\r\n      amount: T.string,\r\n      currency: T.string,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","const stats = [\r\n  { id: 'id-1', label: '.docx', percentage: 22 },\r\n  { id: 'id-2', label: '.pdf', percentage: 4 },\r\n  { id: 'id-3', label: '.mp3', percentage: 17 },\r\n  { id: 'id-4', label: '.psd', percentage: 47 },\r\n  { id: 'id-5', label: '.pdf', percentage: 10 },\r\n];\r\n\r\nexport default stats;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Profile from './component/Profile/Profile';\r\nimport Stats from './component/StatSection/Stats';\r\nimport FriendList from './component/FriendsList/FriendList';\r\nimport TransactionHistory from './component/Transactions/TransactionHistory';\r\nimport friends from './component/FriendsList/friends';\r\nimport stats from './component/StatSection/statsData';\r\nimport transactions from './component/Transactions/transactions';\r\nimport user from './component/Profile/user';\r\n\r\nconst App = (\r\n  <>\r\n    <Profile user={user} />\r\n    <Stats title=\"Upload stats\" stats={stats} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </>\r\n);\r\n\r\nReactDOM.render(App, document.getElementById('root'));\r\n"],"sourceRoot":""}